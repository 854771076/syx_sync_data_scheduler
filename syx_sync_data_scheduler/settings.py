"""
Django settings for syx_sync_data_scheduler project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os,datetime
from dotenv import load_dotenv
# 加载 .env 文件中的环境变量
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG')
LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_L10N = True
USE_TZ = False
ALLOWED_HOSTS = ['*']
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    'sign',
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "Authorization",
    'Cookie'
]
CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS',
]

# Application definition

INSTALLED_APPS = [
    'simpleui',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'rest_framework',
    'corsheaders',
    'executors',
    'django_apscheduler',
]




MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "syx_sync_data_scheduler.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]
# simpleui
# 首页
SIMPLEUI_HOME_PAGE = '/log_statistics/'
SIMPLEUI_HOME_TITLE = '同步日志统计'

SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS=True

SIMPLEUI_DEFAULT_THEME = 'element.css'
SIMPLEUI_CONFIG = {
      # 是否使用系统默认菜单，自定义菜单时建议关闭。
     'system_keep': False,
     
      # 用于菜单排序和过滤, 不填此字段为默认排序和全部显示。空列表[] 为全部不显示.
     'menu_display': ['任务管理','配置管理','调度管理','通知管理', '权限认证'],
     
     # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时刷新展示菜单内容。
     # 一般建议关闭。
     'dynamic': False,
     'menus': [
         {
             'app': 'auth',
             'name': '权限认证',
             'icon': 'fas fa-user-shield',
             'models': [
                 {
                 'name': '用户列表',
                 'icon': 'fa fa-user',
                 'url': '/admin/auth/user/'
                 },
                 {
                     'name': '用户组',
                     'icon': 'fa fa-th-list',
                     'url': '/admin/auth/group/'
                 }
             ]
         },
         {
             'name': '任务管理',
             'icon': 'fa fa-th-list',
             'models': [
                {
                 'name': '项目管理',
                 'url': '/admin/executors/project/',
                 },
                 {
                 'name': '任务列表',
                 'url': '/admin/executors/task/',
                 }
             ]
         },
         {
             'name': '调度管理',
             'icon': 'fa fa-th-list',
             'models': [
                {
                 'name': '执行日志',
                 'url': '/admin/django_apscheduler/djangojobexecution/',
                 },
                 {
                 'name': '调度任务',
                 'url': '/admin/django_apscheduler/djangojob/',
                 }
             ]
         },
         {
             'name': '通知管理',
             'icon': 'fa fa-th-list',
             'models': [
                {
                 'name': '通知配置',
                 'url': '/admin/executors/notification/',
                 }
             ]
         },
         {
             'name': '配置管理',
             'icon': 'fa fa-th-list',
             'models': [
                 {
                 'name': '全局配置',
                 'url': '/admin/executors/config/',
                 },
                 {
                 'name': '分库分表配置',
                 'url': '/admin/executors/splitconfig/',
                 },
                 {
                 'name': '字段配置',
                 'url': '/admin/executors/columnconfig/',
                 },
                 {
                 'name': '数据源配置',
                 'url': '/admin/executors/datasource/',
                 },
                 {
                 'name': '租户配置',
                 'url': '/admin/executors/tenant/',
                 },
             ]
         },
     ]
 }
WSGI_APPLICATION = "syx_sync_data_scheduler.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
USE_TZ = True
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME'),  #recruit_info
        'USER': os.getenv('DB_USER'),  # os.environ.get('DJANGO_MYSQL_USER')
        'PASSWORD': os.getenv('DB_PASSWORD'),  # os.environ.get('DJANGO_MYSQL_PASSWORD')
        'HOST': os.getenv('DB_HOST'),  # os.environ.get('DJANGO_MYSQL_HOST')
        'PORT': int(os.getenv('DB_PORT')),
        'OPTIONS': {'charset': 'utf8mb4'},
    },
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_TZ = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 启动host
HOST = os.getenv('HOST')
# 启动端口
PORT = os.getenv('PORT')